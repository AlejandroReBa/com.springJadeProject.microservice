/api;GET;api specification;-;api specification
/api/agent/{localName};GET;get information of the specified agent running in the Jade Container;-;An agent
/api/agent/available/{localName};GET;get information of the specified agent (if it is completely managed by the API) even if it is not running in the container;-;An agent
/api/agent/description/{localName};GET;get a container description of the specified agent running in the Jade Container;-;An AMSAgentDescription
/api/agent/state/{localName};GET;get the state of the specified agent running in the Jade Container;-;{name,code}
/api/agent/available/state/{localName};GET;get the state of the specified agent (if it is completely managed by the API) even if it is not running in the container;-;{name,code}
/api/agents;GET;get information of every agent running in the Jade Container;-;List of agents
/api/agents/names;GET;collect the names of every agent running in the Jade Container;-;List of names
/api/agents/description;GET;get a container description of every agent running in the Jade Container;-;List of AMSAgentDescription
/api/agents/all/description;GET;get a container description of every agent running in the Jade Container, including the own run by the Jade Platform;-;List of AMSAgentDescription
/api/agents/available;GET;get information of every agent you can manage via API;-;List of agents
/api/agents/available/names;GET;get names of every agent you can manage via API;-;List of names
/api/agent/available/behaviours/{localName};GET;get information of all behaviours attached to the specified agent (if it is completely managed by the API) even if it isn't running in the container;-;List of behaviours
/api/agent/available/behaviours/names/{localName};GET;get all names of all behaviours attached to the specified agent (if it is completely managed by the API) even if isn't running in the container;-;List of names
/api/agent/behaviours/{localName};GET;get information of all behaviours attached to the specified agent running in the Jade Container;-;List of behaviours
/api/agent/behaviours/names/{localName};GET;get all names of all behaviours attached to the specified agent running in the Jade Container;-;List of names
/api/agent/behaviours/[ready-blocked-running]/{localName};GET;get information of all behaviours whose state is ready, blocked or running, attached to the specified agent running in ghe Jade Container;-;List of behaviours
/api/agent/behaviours/[ready-blocked-running]/names/{localName};GET;get all names of all behaviours whose state is ready, blocked or running, attached to the specified agent running in ghe Jade Container;-;List of names
/api/agent/init;POST;init the specified agent in the Jade Container;{agentName:String};{message:String} or {error:String} with the result of the request
/api/agent/stop;POST;stop the specified agent in the Jade Container;{agentName:String};{message:String} or {error:String} with the result of the request
/api/agent/restart;POST;restart the specified agent in the Jade Container;{agentName:String};{message:String} or {error:String} with the result of the request
/api/behaviours;GET;get information of all behaviours instances which are in the Jade Container;-;List of behaviours
/api/behaviours/names;GET;get all names of all behaviours instances whhich are in the Jade Container;-;List of names
/api/behaviours/available;GET;get information of all behaviours I can add to distinct agents. Some of them are single intances, other are factory so I can attach them to every agent I need;-;List of behaviours
/api/behaviours/available/names;GET;get all names of all behaviours I can add to distinct agents. Some of them are single intances, other are factory so I can attach them to every agent I need;-;List of behaviours
/api/agent/add/behaviour;POST;add the specified behaviour to the specified agent;{agentName:String, behaviourName:String, startNow:boolean};{message:String} or {error:String} with the result of the request
/api/agent/reset/behaviour;POST;reset the specified behaviour from the specified agent;{agentName:String, behaviourName:String};{message:String} or {error:String} with the result of the request
/api/agent/remove/behaviour;POST;remove the specified behaviour from the specified agent;{agentName:String,behaviourName:String, forever:boolean};{message:String} or {error:String} with the result of the request